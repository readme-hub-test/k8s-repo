name: Deploy MkDocs GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs mkdocs-material requests jq

      - name: Fetch all repositories in the organization
        run: |
          ORGANIZATION="readme-hub-test"  # Use your organization name here
          REPOS_URL="https://api.github.com/orgs/$ORGANIZATION/repos?per_page=100"
          REPOS=$(curl -s $REPOS_URL | jq -r '.[].name')
      
          # Define additional markdown files to include (path within repo)
          ADDITIONAL_FILES=("additional-documentation.md")  # Define additional files
      
          # Create docs/readmes directory and index.md
          mkdir -p docs/readmes
      
          # Start creating the index.md file with links to each repo page
          echo "# Organization Repositories" > docs/index.md
          echo "Here are the README files and additional markdown files from all repositories in the organization:" >> docs/index.md
          echo "" >> docs/index.md
      
          # Loop through the repositories and create a page for each repo
          for REPO in $REPOS; do
            REPO_FILE="docs/$REPO.md"  # Create a page for the repository
      
            # Write the README content to the new page
            README_URL="https://raw.githubusercontent.com/$ORGANIZATION/$REPO/main/README.md"
            echo "# $REPO" > $REPO_FILE
            curl -s $README_URL >> $REPO_FILE
      
            # Add a link to the repository's page in index.md
            echo "- [$REPO](/$REPO.md)" >> docs/index.md
      
            # Loop through additional markdown files
            for FILE in "${ADDITIONAL_FILES[@]}"; do
              FILE_NAME=$(basename $FILE)  # Extract filename
              DEST_FILE="docs/${REPO}_${FILE_NAME}"  # Unique file name in docs
      
              FILE_URL="https://raw.githubusercontent.com/$ORGANIZATION/$REPO/main/$FILE"
              HTTP_STATUS=$(curl -o /dev/null --silent --head --write-out '%{http_code}\n' $FILE_URL)
      
              if [ "$HTTP_STATUS" -eq 200 ]; then
                echo "# $REPO - $FILE_NAME" > $DEST_FILE
                curl -s $FILE_URL >> $DEST_FILE
                echo "- [$REPO - $FILE_NAME](/${REPO}_${FILE_NAME})" >> docs/index.md
              fi
            done
          done


      - name: Build the MkDocs site
        run: |
          mkdocs build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: site
          clean: true
